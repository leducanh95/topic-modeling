name: CI/CD

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
  
  workflow_dispatch:

jobs:
  # Job 1: check coding style
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python --version
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check with isort
        run: isort . --check-only --profile black

      - name: Check with black
        run: black --check .

      - name: Check with flake8
        run: flake8 . --max-line-length=88 --extend-ignore=E402,D100,D401,D104,D103

      - name: Run tests
        run: |
          pytest --cov=./ --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml

    #   - name: Run unit tests
    #     run: |
    #       python --version
    #       pytest tests/ --ignore=tests/test_chat_provider.py 


  # Job 2: build and push
  build_and_push:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        # Use the "checkout" action to copy code from the repository to the Ubuntu virtual machine
        uses: actions/checkout@v2

      - name: Login to Docker Hub
            # Use the "docker/login-action" action to log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and test
        # Build and test the Docker image
        run: |
          docker build -t topic-modeling .

      - name: Push image to Docker Hub
        uses: docker/build-push-action@v2
        # Use the "docker/build-push-action" action to push the image to Docker Hub
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/topic-modeling:${{ github.sha }}

  # deploy:
  #   needs: build_and_test
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Deploy to server
  #       # Use the "appleboy/ssh-action" action to deploy the image to the server via SSH
  #       uses: appleboy/ssh-action@v0.1.3
  #       with:
  #         host: ${{ secrets.SERVER_HOST }}
  #         username: ${{ secrets.SERVER_USER }}
  #         key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         script: |
  #           # Pull the image that was pushed to DockerHub above
  #           docker pull ${{ secrets.DOCKERHUB_USERNAME }}/topic-modeling:${{ github.sha }}

  #           # Stop and remove the current container (if any)
  #           docker stop topic-modeling
  #           docker rm topic-modeling

  #           # Run a new container with the pulled image above
  #           docker run -d -p 80:3000 --name topic-modeling ${{ secrets.DOCKERHUB_USERNAME }}/topic-modeling:${{ github.sha }}
